# Copyright 2017-present Open Networking Foundation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# -*- coding: utf-8 -*-
# Generated by Django 1.11.11 on 2019-03-05 01:50
from __future__ import unicode_literals

import core.models.xosbase_header
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0003_auto_20190304_1358'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='controller_decl',
            name='deployment',
        ),
        migrations.AlterUniqueTogether(
            name='controllerimages_decl',
            unique_together=set([]),
        ),
        migrations.RemoveField(
            model_name='controllerimages_decl',
            name='controller',
        ),
        migrations.RemoveField(
            model_name='controllerimages_decl',
            name='image',
        ),
        migrations.AlterUniqueTogether(
            name='controllernetwork_decl',
            unique_together=set([]),
        ),
        migrations.RemoveField(
            model_name='controllernetwork_decl',
            name='controller',
        ),
        migrations.RemoveField(
            model_name='controllernetwork_decl',
            name='network',
        ),
        migrations.DeleteModel(
            name='ControllerRole_decl',
        ),
        migrations.AlterUniqueTogether(
            name='controllersite_decl',
            unique_together=set([]),
        ),
        migrations.RemoveField(
            model_name='controllersite_decl',
            name='controller',
        ),
        migrations.RemoveField(
            model_name='controllersite_decl',
            name='site',
        ),
        migrations.AlterUniqueTogether(
            name='controllersiteprivilege_decl',
            unique_together=set([]),
        ),
        migrations.RemoveField(
            model_name='controllersiteprivilege_decl',
            name='controller',
        ),
        migrations.RemoveField(
            model_name='controllersiteprivilege_decl',
            name='site_privilege',
        ),
        migrations.AlterUniqueTogether(
            name='controllerslice_decl',
            unique_together=set([]),
        ),
        migrations.RemoveField(
            model_name='controllerslice_decl',
            name='controller',
        ),
        migrations.RemoveField(
            model_name='controllerslice_decl',
            name='slice',
        ),
        migrations.AlterUniqueTogether(
            name='controllersliceprivilege_decl',
            unique_together=set([]),
        ),
        migrations.RemoveField(
            model_name='controllersliceprivilege_decl',
            name='controller',
        ),
        migrations.RemoveField(
            model_name='controllersliceprivilege_decl',
            name='slice_privilege',
        ),
        migrations.AlterUniqueTogether(
            name='controlleruser_decl',
            unique_together=set([]),
        ),
        migrations.RemoveField(
            model_name='controlleruser_decl',
            name='controller',
        ),
        migrations.RemoveField(
            model_name='controlleruser_decl',
            name='user',
        ),
        migrations.AlterUniqueTogether(
            name='imagedeployments_decl',
            unique_together=set([]),
        ),
        migrations.RemoveField(
            model_name='imagedeployments_decl',
            name='deployment',
        ),
        migrations.RemoveField(
            model_name='imagedeployments_decl',
            name='image',
        ),
        migrations.RemoveField(
            model_name='instance_decl',
            name='creator',
        ),
        migrations.RemoveField(
            model_name='instance_decl',
            name='deployment',
        ),
        migrations.RemoveField(
            model_name='instance_decl',
            name='flavor',
        ),
        migrations.RemoveField(
            model_name='instance_decl',
            name='image',
        ),
        migrations.RemoveField(
            model_name='instance_decl',
            name='node',
        ),
        migrations.RemoveField(
            model_name='instance_decl',
            name='parent',
        ),
        migrations.RemoveField(
            model_name='instance_decl',
            name='slice',
        ),
        migrations.AlterUniqueTogether(
            name='sitedeployment_decl',
            unique_together=set([]),
        ),
        migrations.RemoveField(
            model_name='sitedeployment_decl',
            name='controller',
        ),
        migrations.RemoveField(
            model_name='sitedeployment_decl',
            name='deployment',
        ),
        migrations.RemoveField(
            model_name='sitedeployment_decl',
            name='site',
        ),
        migrations.RemoveField(
            model_name='siteprivilege_decl',
            name='role',
        ),
        migrations.RemoveField(
            model_name='siteprivilege_decl',
            name='site',
        ),
        migrations.RemoveField(
            model_name='siteprivilege_decl',
            name='user',
        ),
        migrations.AlterUniqueTogether(
            name='sliceprivilege_decl',
            unique_together=set([]),
        ),
        migrations.RemoveField(
            model_name='sliceprivilege_decl',
            name='role',
        ),
        migrations.RemoveField(
            model_name='sliceprivilege_decl',
            name='slice',
        ),
        migrations.RemoveField(
            model_name='sliceprivilege_decl',
            name='user',
        ),
        migrations.RemoveField(
            model_name='tenantwithcontainer_decl',
            name='creator',
        ),
        migrations.RemoveField(
            model_name='tenantwithcontainer_decl',
            name='instance',
        ),
        migrations.RemoveField(
            model_name='tenantwithcontainer_decl',
            name='serviceinstance_decl_ptr',
        ),
        migrations.DeleteModel(
            name='Controller',
        ),
        migrations.DeleteModel(
            name='ControllerImages',
        ),
        migrations.DeleteModel(
            name='ControllerNetwork',
        ),
        migrations.DeleteModel(
            name='ControllerRole',
        ),
        migrations.DeleteModel(
            name='ControllerSite',
        ),
        migrations.DeleteModel(
            name='ControllerSitePrivilege',
        ),
        migrations.DeleteModel(
            name='ControllerSlice',
        ),
        migrations.DeleteModel(
            name='ControllerSlicePrivilege',
        ),
        migrations.DeleteModel(
            name='ControllerUser',
        ),
        migrations.DeleteModel(
            name='Deployment',
        ),
        migrations.DeleteModel(
            name='ImageDeployments',
        ),
#        migrations.DeleteModel(
#            name='Instance',
#        ),
#        migrations.DeleteModel(
#            name='SiteDeployment',
#        ),
        migrations.DeleteModel(
            name='SitePrivilege',
        ),
        migrations.DeleteModel(
            name='SiteRole',
        ),
        migrations.DeleteModel(
            name='SlicePrivilege',
        ),
        migrations.DeleteModel(
            name='SliceRole',
        ),
        migrations.DeleteModel(
            name='TenantWithContainer',
        ),
        migrations.RemoveField(
            model_name='node_decl',
            name='site_deployment',
        ),
        migrations.RemoveField(
            model_name='privilege_decl',
            name='controller_id',
        ),
        migrations.AddField(
            model_name='node_decl',
            name='site',
            field=models.ForeignKey(default=core.models.xosbase_header.get_first_site, on_delete=django.db.models.deletion.CASCADE, related_name='nodes', to='core.Site'),
        ),
        # NOTE: Had to manually move AlterUniqueTogether before RemoveField
        migrations.AlterUniqueTogether(
            name='port_decl',
            unique_together=set([('service_instance', 'network')]),
        ),
        migrations.RemoveField(
            model_name='port_decl',
            name='instance',
        ),
        migrations.DeleteModel(
            name='Controller_decl',
        ),
        migrations.DeleteModel(
            name='ControllerImages_decl',
        ),
        migrations.DeleteModel(
            name='ControllerNetwork_decl',
        ),
        migrations.DeleteModel(
            name='ControllerSite_decl',
        ),
        migrations.DeleteModel(
            name='ControllerSitePrivilege_decl',
        ),
        migrations.DeleteModel(
            name='ControllerSlice_decl',
        ),
        migrations.DeleteModel(
            name='ControllerSlicePrivilege_decl',
        ),
        migrations.DeleteModel(
            name='ControllerUser_decl',
        ),
        migrations.DeleteModel(
            name='Deployment_decl',
        ),
        migrations.DeleteModel(
            name='ImageDeployments_decl',
        ),
#        migrations.DeleteModel(
#            name='SiteDeployment_decl',
#        ),
        migrations.DeleteModel(
            name='SitePrivilege_decl',
        ),
        migrations.DeleteModel(
            name='SiteRole_decl',
        ),
        migrations.DeleteModel(
            name='SlicePrivilege_decl',
        ),
        migrations.DeleteModel(
            name='SliceRole_decl',
        ),
        migrations.DeleteModel(
            name='TenantWithContainer_decl',
        ),
#        migrations.DeleteModel(
#            name='Instance_decl',
#        ),
    ]
